package janelas;

import data.access.object.DAOUsuario;
import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author joao.oliveira
 */
public class FormLogin extends javax.swing.JFrame {

    /**
     * Creates new form FormLogin
     */
    public FormLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        setoresTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        usuarioTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        senhaTxt = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ufCmb = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Diário de Bordo");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        setoresTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(setoresTable);

        jLabel1.setText("Usuário:");

        jLabel2.setText("Senha:");

        jLabel3.setText("Setor");

        jLabel4.setText("UF:");

        ufCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CE", "MA", "PI" }));
        ufCmb.setSelectedIndex(-1);
        ufCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ufCmbItemStateChanged(evt);
            }
        });

        jButton1.setText("Entrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cadastrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(senhaTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usuarioTxt)
                            .addComponent(ufCmb, javax.swing.GroupLayout.Alignment.LEADING, 0, 154, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuarioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(senhaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ufCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(11, 11, 11)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(16, 16, 16))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        this.usuarioTxt.setText(System.getProperty("user.name"));
//        try {
//            System.out.println(Cypher.encrypt("senha@321"));
//        } catch (Exception ex) {
//            Logger.getLogger(FormLogin.class.getName()).log(Level.SEVERE, null, ex);
//        }

        String pastaRaiz = System.getProperty("user.dir");

        if (pastaRaiz.contains("CONTROLE LOCAL DIR_CE")) {

            JOptionPane.showMessageDialog(null, "Não é permitido executar o programa nesse caminho! \r\n COPIE o arquivo para sua área de trabalho e execute!");
            this.dispose();

        }

    }//GEN-LAST:event_formWindowOpened

    private void ufCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ufCmbItemStateChanged

        Object item = evt.getItem();
        String uf = item.toString();

        if (evt.getStateChange() == ItemEvent.SELECTED) {

            String[] colunas = {"Setor", " "};
            DefaultTableModel dadosSetores = new DefaultTableModel(new Object[0][0], colunas) {

                @Override
                public boolean isCellEditable(int row, int col) {
                    return (col == 1);
                }

                @Override
                public Class getColumnClass(int column) {
                    return (getValueAt(0, column).getClass());
                }

            };

            data.access.object.DAOSetores DAOSetores = new data.access.object.DAOSetores();
            List setores = null;

            try {

                setores = DAOSetores.getSetoresPorUF(uf);

            } catch (SQLException | ClassNotFoundException ex) {

                JOptionPane.showMessageDialog(null, ex);

            }

            for (int i = 0; i < setores.size() - 1; i++) {

                Map obj = (Map) setores.get(i);
                Object[] linha = {obj.get("SETOR"), Boolean.FALSE};
                dadosSetores.addRow(linha);

            }

            this.setoresTable.setModel(dadosSetores);
            this.setoresTable.getColumnModel().getColumn(0).setMinWidth(150);
            this.setoresTable.getColumnModel().getColumn(0).setMaxWidth(300);

        }

    }//GEN-LAST:event_ufCmbItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        janelas.FormCadastro frm = new janelas.FormCadastro();
        frm.setVisible(true);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String user = this.usuarioTxt.getText();
        String pass = this.senhaTxt.getText();
        DAOUsuario UsuarioDAO = new DAOUsuario();
        String cargo = "";
        String uf = "";

        try {
            cargo = UsuarioDAO.getCargo(user);
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex.toString(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

        if (user.equals("")) {

            JOptionPane.showMessageDialog(null, "O USUARIO é obrigatório");
            return;

        } else if (pass.equals("")) {

            JOptionPane.showMessageDialog(null, "A SENHA é obrigatória");
            return;

        }

        if (this.ufCmb.getSelectedItem() == null & cargo.equals("CONTROLADOR")) {

            JOptionPane.showMessageDialog(null, "A UF é obrigatória");
            return;

        } else if(cargo.equals("CONTROLADOR")){

            uf = this.ufCmb.getSelectedItem().toString();

        }

        ArrayList setores = new ArrayList();

        if (this.setoresTable.getRowCount() == 0 & cargo.equals("CONTROLADOR")) {

            JOptionPane.showMessageDialog(null, "Selecione uma UF!");
            return;

        }

        for (int i = 0; i <= this.setoresTable.getRowCount() - 1; i++) {

            if (this.setoresTable.getModel().getValueAt(i, 1) == Boolean.TRUE) {

                setores.add(this.setoresTable.getModel().getValueAt(i, 0));

            }

        }

        if (setores.isEmpty() & cargo.equals("CONTROLADOR")) {

            JOptionPane.showMessageDialog(null, "Selecione um ou mais setor(es)!");
            return;

        }

        seguranca.Autenticacao Autenticacao = new seguranca.Autenticacao();

        try {

            if (Autenticacao.autorizado(user, pass) == true) {

                if (cargo.equals("CONTROLADOR")) {

                    janelas.FormDiarioCon frm = new janelas.FormDiarioCon();
                    frm.setUsuario(user);
                    frm.setUf(uf);
                    frm.setSetores(setores);
                    frm.setVisible(true);

                } else if (cargo.equals("SUPERVISOR")) {

                    janelas.FormDiarioSup frm = new janelas.FormDiarioSup();
                    frm.setUsuario(user);
                    frm.setVisible(true);

                } else if (cargo.equals("COORDENADOR")) {

                    janelas.FormDiarioCoo frm = new janelas.FormDiarioCoo();
                    frm.setUsuario(user);
                    frm.setVisible(true);

                }

                this.dispose();

            } else {

                JOptionPane.showMessageDialog(null, "Usuário Desconhecido!");

            }

        } catch (ClassNotFoundException ex) {

            JOptionPane.showMessageDialog(null, "Erro: " + ex.toString(), "Erro", JOptionPane.ERROR_MESSAGE);

        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, "Erro: " + ex.toString(), "Erro", JOptionPane.ERROR_MESSAGE);

        }


    }//GEN-LAST:event_jButton1ActionPerformed
//
 //   void senhas() throws Exception {
//        
//        DAOControlador c = new DAOControlador();
//        ArrayList<Controlador> d = c.getListaControladoresCompleta();
//       
//        for(Controlador con : d){
//            
//            System.out.println(con.getNome() + ";" + con.getMatricula() + ";" + Cypher.decrypt(con.getSenha()));
//            
//        }
//        
  //      System.out.println(Cypher.encrypt("senha@321"));
//        
  //  }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPasswordField senhaTxt;
    private javax.swing.JTable setoresTable;
    private javax.swing.JComboBox ufCmb;
    private javax.swing.JTextField usuarioTxt;
    // End of variables declaration//GEN-END:variables
}
